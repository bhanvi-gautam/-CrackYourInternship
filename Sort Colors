//2 approaches
//1-->count number of zeroes and ones and twos,and then overwrite the array
//2-->two-pointer approach ..if use found two in the beginning ,swap with other pointer's position and same with zero


class Solution {
public:
    void sortColors(vector<int>& nums) {
        int zeroes=0;
        int ones=0;
        int twos=0;
        
        for(int i=0;i<nums.size();i++){
            if(nums[i]==0){
                zeroes++;
            }
            else if(nums[i]==1){
                ones++;
            }
            else{
                twos++;
            }
        }
        int k=0;
        for(int i=0;i<zeroes;i++){
            nums[k]=0;
            k++;
        }
        for(int i=0;i<ones;i++){
            nums[k]=1;
            k++;
        }
        for(int i=0;i<twos;i++){
            nums[k]=2;
            k++;
        }
    }
};


class Solution {
public:
    void sortColors(vector<int>& arr) {
        int n=arr.size();
      int z=0;
    int t=n-1;
    
 for(int i=0;i<n;i++){
    	
     if(arr[i]==2 && i<t){
       
         int temp=arr[i];
         arr[i]=arr[t];
         arr[t]=temp;
         t--;
         i--;
        
         continue;
  
     }
    else if(arr[i]==0){
         int temp=arr[i];
         arr[i]=arr[z];
         arr[z]=temp;
         z++;
        continue;
     }
     else
         continue;
    
 } 
}
};
