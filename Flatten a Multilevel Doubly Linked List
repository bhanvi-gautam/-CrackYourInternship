/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* prev;
    Node* next;
    Node* child;
};
*/

class Solution {
    Node* flattenRec(Node* head){
        Node* curr=head;
        Node* tail=head;
        
        while(curr!=NULL){
            Node *child=curr->child;
            Node *next=curr->next;
            
            if(child){
                Node* _tail=flattenRec(child);
                _tail->next=next;
                
                if(next){
                    next->prev=_tail;
                }
                curr->next=child;
                child->prev=curr;
                curr->child=NULL;//removing child to make it a doubly linked list
                curr=tail;
            }
            else
                curr=next;
            if(curr)
            tail=curr;
            
        }
        return tail;
    }
    
public:
    Node* flatten(Node* head) {
        if(head)
            flattenRec(head);
        return head;
    }
};
